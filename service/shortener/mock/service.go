// Code generated by MockGen. DO NOT EDIT.
// Source: interface.go

// Package servicemock is a generated GoMock package.
package servicemock

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	uuid "github.com/google/uuid"
	model "github.com/vstdy0/go-shortener/model"
)

// MockService is a mock of Service interface.
type MockService struct {
	ctrl     *gomock.Controller
	recorder *MockServiceMockRecorder
}

// MockServiceMockRecorder is the mock recorder for MockService.
type MockServiceMockRecorder struct {
	mock *MockService
}

// NewMockService creates a new mock instance.
func NewMockService(ctrl *gomock.Controller) *MockService {
	mock := &MockService{ctrl: ctrl}
	mock.recorder = &MockServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockService) EXPECT() *MockServiceMockRecorder {
	return m.recorder
}

// AddURL mocks base method.
func (m *MockService) AddURL(ctx context.Context, obj *model.URL) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddURL", ctx, obj)
	ret0, _ := ret[0].(error)
	return ret0
}

// AddURL indicates an expected call of AddURL.
func (mr *MockServiceMockRecorder) AddURL(ctx, obj interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddURL", reflect.TypeOf((*MockService)(nil).AddURL), ctx, obj)
}

// AddURLsBatch mocks base method.
func (m *MockService) AddURLsBatch(ctx context.Context, objs *[]model.URL) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddURLsBatch", ctx, objs)
	ret0, _ := ret[0].(error)
	return ret0
}

// AddURLsBatch indicates an expected call of AddURLsBatch.
func (mr *MockServiceMockRecorder) AddURLsBatch(ctx, objs interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddURLsBatch", reflect.TypeOf((*MockService)(nil).AddURLsBatch), ctx, objs)
}

// Close mocks base method.
func (m *MockService) Close() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Close")
	ret0, _ := ret[0].(error)
	return ret0
}

// Close indicates an expected call of Close.
func (mr *MockServiceMockRecorder) Close() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Close", reflect.TypeOf((*MockService)(nil).Close))
}

// GetURL mocks base method.
func (m *MockService) GetURL(ctx context.Context, urlID int) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetURL", ctx, urlID)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetURL indicates an expected call of GetURL.
func (mr *MockServiceMockRecorder) GetURL(ctx, urlID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetURL", reflect.TypeOf((*MockService)(nil).GetURL), ctx, urlID)
}

// GetUserURLs mocks base method.
func (m *MockService) GetUserURLs(ctx context.Context, userID uuid.UUID) ([]model.URL, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUserURLs", ctx, userID)
	ret0, _ := ret[0].([]model.URL)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetUserURLs indicates an expected call of GetUserURLs.
func (mr *MockServiceMockRecorder) GetUserURLs(ctx, userID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUserURLs", reflect.TypeOf((*MockService)(nil).GetUserURLs), ctx, userID)
}

// Ping mocks base method.
func (m *MockService) Ping() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Ping")
	ret0, _ := ret[0].(error)
	return ret0
}

// Ping indicates an expected call of Ping.
func (mr *MockServiceMockRecorder) Ping() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Ping", reflect.TypeOf((*MockService)(nil).Ping))
}

// RemoveUserURLs mocks base method.
func (m *MockService) RemoveUserURLs(ctx context.Context, objs []model.URL) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RemoveUserURLs", ctx, objs)
	ret0, _ := ret[0].(error)
	return ret0
}

// RemoveUserURLs indicates an expected call of RemoveUserURLs.
func (mr *MockServiceMockRecorder) RemoveUserURLs(ctx, objs interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RemoveUserURLs", reflect.TypeOf((*MockService)(nil).RemoveUserURLs), ctx, objs)
}
